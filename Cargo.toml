[package]
name = "pinned-init"
version = "0.0.8"
edition = "2021"

authors = ["y86-dev"]
license = "MIT OR Apache-2.0"
description = "Library to facilitate safe pinned initialization"
readme = "README.md"

documentation = "https://docs.rs/pinned-init"
repository = "https://github.com/Rust-for-Linux/pinned-init"
keywords = ["safe", "pin", "init", "no-std", "rust-patterns"]
categories = ["no-std", "rust-patterns", "embedded"]

[dependencies]
paste = "1.0"
pinned-init-macro = { path = "./pinned-init-macro", version = "=0.0.5" }

[features]
default = ["std", "arc"]
std = ["alloc"]
alloc = []
arc = ["alloc"]

[dev-dependencies]
libc = "0.2"
trybuild = { version = "1.0", features = ["diff"] }
macrotest = "1.0"
# needed for macrotest, have to enable verbatim feature to be able to format `&raw` expressions.
prettyplease = { version = "0.2", features = ["verbatim"] }

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(NO_UI_TESTS)', 'cfg(NO_ALLOC_FAIL_TESTS)'] }
